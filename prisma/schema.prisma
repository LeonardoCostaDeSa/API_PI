// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Produto {
  id                 Int                  @id @default(autoincrement())
  nome               String
  descricao          String
  classe             String
  unidade            String
  imagemUrl          String
  ncm                String
  produto_fornecedor Produto_Fornecedor[]
  orcamento_produto  Orcamento_Produto[]
}

model Fornecedor {
  id                 Int                  @id @default(autoincrement())
  razaoSocial        String
  telefone           String
  descricao          String
  endereco           String
  produto_fornecedor Produto_Fornecedor[]
}

model Produto_Fornecedor {
  id            Int        @id @default(autoincrement())
  produto_id    Int
  produto       Produto    @relation(fields: [produto_id], references: [id])
  fornecedor_id Int
  fornecedor    Fornecedor @relation(fields: [fornecedor_id], references: [id])
}

model Orcamento {
  id                Int                 @id @default(autoincrement())
  data              String
  vlrProd           Float
  vlrServ           Float
  vlrTotal          Float
  imagemAntes       String
  imagemDepois      String
  status            String
  projeto_id        Int?
  projeto           Projeto?            @relation(fields: [projeto_id], references: [id])
  cliente_id        Int
  cliente           Cliente             @relation(fields: [cliente_id], references: [id])
  orcamento_produto Orcamento_Produto[]
}

model Orcamento_Produto {
  id           Int       @id @default(autoincrement())
  orcamento_id Int
  orcamento    Orcamento @relation(fields: [orcamento_id], references: [id])
  produto_id   Int
  produto      Produto   @relation(fields: [produto_id], references: [id])
  vlrUnit      Float
  quantidade   Int
}

model Projeto {
  id                Int                 @id @default(autoincrement())
  cliente_id        Int
  cliente           Cliente             @relation(fields: [cliente_id], references: [id])
  data              String
  status            String
  orcamento         Orcamento[]
  projeto_prestador Projeto_Prestador[]
}

model Cliente {
  id        Int         @id @default(autoincrement())
  nome      String
  cnpjCpf   String
  tipo      String
  rua       String
  numero    Int
  bairro    String
  cep       String
  cidade    String
  estado    String
  telefone  String
  projetos  Projeto[]
  orcamento Orcamento[]
}

model PrestadorServico {
  id                Int                 @id @default(autoincrement())
  nome              String
  tipo              String
  telefone          String
  projeto_prestador Projeto_Prestador[]
}

model Projeto_Prestador {
  id         Int              @id @default(autoincrement())
  projeto_id Int
  projeto    Projeto          @relation(fields: [projeto_id], references: [id])
  prestador_id Int
  prestador  PrestadorServico @relation(fields: [prestador_id], references: [id])
}